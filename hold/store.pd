#N canvas 345 70 543 571 10;
#X obj 297 200 i \$1;
#X obj 305 113 r /piano/\$1/hold/save;
#X obj 2 112 r /piano/\$1/hold/recall;
#X obj 305 134 route bang;
#X obj 166 133 route bang;
#X obj 111 207 i \$1;
#X obj 167 112 r /piano/\$1/hold/load;
#X text 22 12 hold_store <pianonr>;
#X text 22 30 store hold values for each piano with pianonr;
#X text 23 46 hold for all hold register (backward compatible);
#X text 23 60 holdl \, holdm \, holdh for low \, mid and high register
individual (is overridden by hold for storage);
#X text 160 11 LGPL: (c) algorythmics \, winfried ritsch;
#X obj 17 372 route hold holdl holdm holdh;
#X obj 57 398 list prepend l;
#X obj 99 420 list prepend m;
#X obj 121 445 list prepend h;
#X obj 237 167 r /piano/\$1/hold/rheanr;
#X msg 372 342 clear \, add hold \$1;
#X text 212 219 better data handling later.;
#X text 220 278 float;
#X msg 83 240 read ../../../data/holds/hold-\$1.txt;
#X msg 297 273 write ../../../data/holds/hold-\$1.txt;
#X obj 373 315 r /piano/\$1/hold/val;
#X obj 18 481 s /piano/\$1/hold/val;
#X obj 273 438 r /piano/\$1/hold/val;
#X obj 274 464 s /piano/\$1/hold;
#X obj 97 152 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 109 318 text define -k hold;
#A set hold 32 \;;
#X obj 16 322 text get hold;
#X msg 5 189 0;
#X obj 58 536 print hold_\$1;
#X obj 16 343 list trim;
#X obj 166 157 t b f;
#X connect 0 0 21 0;
#X connect 1 0 3 0;
#X connect 2 0 29 0;
#X connect 3 0 0 0;
#X connect 4 0 32 0;
#X connect 5 0 20 0;
#X connect 6 0 4 0;
#X connect 12 0 23 0;
#X connect 12 1 13 0;
#X connect 12 2 14 0;
#X connect 12 3 15 0;
#X connect 16 0 0 1;
#X connect 16 0 32 0;
#X connect 20 0 27 0;
#X connect 21 0 27 0;
#X connect 22 0 17 0;
#X connect 24 0 25 0;
#X connect 26 0 5 0;
#X connect 27 0 30 0;
#X connect 28 0 31 0;
#X connect 29 0 28 0;
#X connect 31 0 12 0;
#X connect 31 0 30 0;
#X connect 32 0 29 0;
#X connect 32 1 5 0;
